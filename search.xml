<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>EasyImage</title>
      <link href="/2025/03/12/EasyImage/"/>
      <url>/2025/03/12/EasyImage/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="基础环境检查"><a href="#基础环境检查" class="headerlink" title="基础环境检查"></a>基础环境检查</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker -v &amp;&amp; docker compose version</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /root/data/docker_data/easyimage</span><br><span class="line">cd /root/data/docker_data/easyimage</span><br><span class="line">mkdir i &amp;&amp; mkdir config</span><br><span class="line">touch docker-compose.yml</span><br></pre></td></tr></table></figure><h3 id="docker-compose文件"><a href="#docker-compose文件" class="headerlink" title="docker-compose文件"></a>docker-compose文件</h3><figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line">services:</span><br><span class="line">    easyimage:</span><br><span class="line">        image: ddsderek/easyimage:latest</span><br><span class="line">        container_name: easyimage</span><br><span class="line">        ports:</span><br><span class="line">          - <span class="string">&#x27;8080:80&#x27;</span></span><br><span class="line">        environment:</span><br><span class="line">          - TZ=Asia/Shanghai</span><br><span class="line">          - PUID=<span class="number">1000</span></span><br><span class="line">          - PGID=<span class="number">1000</span></span><br><span class="line">        volumes:</span><br><span class="line">          - <span class="string">&#x27;./config:/app/web/config&#x27;</span></span><br><span class="line">          - <span class="string">&#x27;./i:/app/web/i&#x27;</span></span><br><span class="line">        restart: unless-stopped</span><br></pre></td></tr></table></figure><h3 id="检查文件"><a href="#检查文件" class="headerlink" title="检查文件"></a>检查文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat docker-compose.yaml</span><br></pre></td></tr></table></figure><p><img src="https://www.chumq.cn:6081/app/hide.php?key=aElSQjZUUlI5S3l5QllLZVczaHVWZFV5M0NNMEZreldMUjZ0L2c9PQ==" alt="c193109cd99611284aed264540d6aace.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker compoes up -d</span><br></pre></td></tr></table></figure><h2 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h2><h3 id="后台初始化"><a href="#后台初始化" class="headerlink" title="后台初始化"></a>后台初始化</h3><p>打开<code>http://IP:8080</code>，配置用户名和密码，并登陆后台<br><img src="https://www.chumq.cn:6081/app/hide.php?key=ZzJyMmxYQ2VBNGZIbnRUVHE2U0tEZFV5M0NNMEZreldMUjZ0L2c9PQ==" alt="8fab264bd551eb7ca093a1a31b983156.png"></p><h3 id="设置API"><a href="#设置API" class="headerlink" title="设置API"></a>设置API</h3><p><img src="https://www.chumq.cn:6081/app/hide.php?key=Tm9nNzZrZjRwb1lXcllFRCtIMUYrTlV5M0NNMEZreldMUjZ0L2c9PQ==" alt="476d2e5d746a97d2d98146695dc14ea5.png"></p><h3 id="安装picgo"><a href="#安装picgo" class="headerlink" title="安装picgo"></a>安装picgo</h3><h4 id="安装基础环境NODE-JS"><a href="#安装基础环境NODE-JS" class="headerlink" title="安装基础环境NODE.JS"></a>安装基础环境NODE.JS</h4><p><code>https://nodejs.org/zh-cn</code></p><h4 id="安装picgo-1"><a href="#安装picgo-1" class="headerlink" title="安装picgo"></a>安装picgo</h4><h5 id="软件下载地址"><a href="#软件下载地址" class="headerlink" title="软件下载地址"></a>软件下载地址</h5><p><code>[https://github.com/Molunerfinn/PicGo/releases](https://github.com/Molunerfinn/PicGo/releases)</code></p><h5 id="软件操作说明"><a href="#软件操作说明" class="headerlink" title="软件操作说明"></a>软件操作说明</h5><p><code>[https://icret.github.io/EasyImages2.0/#/](https://icret.github.io/EasyImages2.0/#/)</code></p><h5 id="配置PICGO"><a href="#配置PICGO" class="headerlink" title="配置PICGO"></a>配置PICGO</h5><p><img src="https://www.chumq.cn:6081/app/hide.php?key=bHdPTnJWb1hLUlVZOCt0OFJTZ1VLZFV5M0NNMEZreldMUjZ0L2c9PQ==" alt="7041a4482c26c4c3bddbaa2a49937d86.png"> <img src="https://www.chumq.cn:6081/app/hide.php?key=Zi9tSENzRlFrblQySk14MytFeDkwOVV5M0NNMEZreldMUjZ0L2c9PQ==" alt="c0d40725e6156e326c9324cd4643dce3.png"><img src="https://www.chumq.cn:6081/app/hide.php?key=QkZPSlZpb3hPL09IWEdQbCtxNDUyZFV5M0NNMEZreldMUjZ0L2c9PQ==" alt="8ad57fe9c45a063c225dbab0100fad63.png"><img src="https://www.chumq.cn:6081/app/hide.php?key=SFgvTVIxZHpMQmlxcmlHMGg5NUlLdFV5M0NNMEZreldMUjZ0L2c9PQ==" alt="dc0b3c8e6db79913a961b52241c1d325.png"></p><blockquote><p>API地址:<code>https://png.cm/api/index.php</code> &#x2F;&#x2F; 输入你网站api地址<br>POST参数名: <code>image</code><br>JSON路径: <code>url</code><br>自定义Body: <code>&#123;&quot;token&quot;:&quot;1c17b11693cb5ec63859b091c5b9c1b2&quot;&#125;</code> &#x2F;&#x2F; 这里输入你网站生成的token</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装v2ray</title>
      <link href="/2025/02/21/v2ray/"/>
      <url>/2025/02/21/v2ray/</url>
      
        <content type="html"><![CDATA[<h3 id="在本页"><a href="#在本页" class="headerlink" title="在本页"></a>在本页</h3><ul><li><a href="#%E6%96%B9%E5%BC%8F%E4%B8%80%E5%A7%8B%E7%BB%88%E4%BD%BF%E7%94%A8%E6%9C%80%E6%96%B0%E7%89%88">方式一：始终使用最新版</a><ul><li><a href="#%E8%8E%B7%E5%8F%96%E9%95%9C%E5%83%8F">获取镜像</a></li><li><a href="#%E8%BF%90%E8%A1%8C-v2raya">运行 v2rayA</a></li></ul></li><li><a href="#%E6%96%B9%E5%BC%8F%E4%BA%8C%E8%8E%B7%E5%8F%96%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC">方式二：获取指定版本</a><ul><li><a href="#%E8%8E%B7%E5%8F%96%E9%95%9C%E5%83%8F-1">获取镜像</a></li><li><a href="#%E8%BF%90%E8%A1%8C-v2raya-1">运行 v2rayA</a></li><li><a href="#%E6%9B%B4%E6%96%B0-v2raya">更新 v2rayA</a></li></ul></li></ul><ol><li><a href="https://v2raya.org/">主页</a></li><li><a href="https://v2raya.org/docs/">用户文档</a></li><li><a href="https://v2raya.org/docs/prologue/">起步</a></li><li><a href="https://v2raya.org/docs/prologue/installation/">安装</a></li><li>Docker</li></ol><p>Docker 镜像内集成了 V2Ray 内核，因此内核无需额外被安装。</p><p>Docker 是一个以服务生产环境而开发的应用平台，在使用 Docker 部署之时，我们相信你已经掌握了运维一台服务器所必须的知识，同时也理解了容器化的概念与 Docker 的基础操作。如若不然，请使用其它更加简单的部署方式。</p><p>以下命令假定你在 root 用户下操作，如果你所使用的用户不是 root，那么你可能需要 <code>sudo</code> 或 <code>doas</code> 命令来进行提权操作。</p><h2 id="方式一：始终使用最新版"><a href="#方式一：始终使用最新版" class="headerlink" title="方式一：始终使用最新版"></a>方式一：始终使用最新版</h2><h3 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">docker pull mzz2017/v2raya</span><br></pre></td></tr></table></figure><h3 id="运行-v2rayA"><a href="#运行-v2rayA" class="headerlink" title="运行 v2rayA"></a>运行 v2rayA</h3><p>停止正在运行的版本（如果存在）：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">docker container stop v2raya</span><br><span class="line">docker container rm v2raya</span><br></pre></td></tr></table></figure><p>运行 v2rayA:</p><ol><li><code>V2RAYA_V2RAY_BIN</code> 的值应当是 <code>/usr/local/bin/v2ray</code> 或 <code>/usr/local/bin/xray</code>，默认的核心是 xray。</li><li>如果你的宿主系统使用原生的 nftables，那么就把 <code>V2RAYA_NFTABLES_SUPPORT</code> 设置为 <code>on</code>。</li><li>如果你的宿主系统使用 iptables，那么可以通过 <code>IPTABLES_MODE</code> 变量来指定后端，将该变量的值设置为 <code>nftables</code> 将使用 nft 后端，设置为 <code>legacy</code> 将使用传统后端。</li></ol><p>以下是一个使用传统后端的示例：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --restart=always \</span><br><span class="line">  --privileged \</span><br><span class="line">  --network=host \</span><br><span class="line">  --name v2raya \</span><br><span class="line">  -e <span class="variable constant_">V2RAYA_LOG_FILE</span>=<span class="regexp">/tmp/</span>v2raya.<span class="property">log</span> \</span><br><span class="line">  -e <span class="variable constant_">V2RAYA_V2RAY_BIN</span>=<span class="regexp">/usr/</span>local/bin/v2ray \</span><br><span class="line">  -e <span class="variable constant_">V2RAYA_NFTABLES_SUPPORT</span>=off \</span><br><span class="line">  -e <span class="variable constant_">IPTABLES_MODE</span>=legacy \</span><br><span class="line">  -v /lib/<span class="attr">modules</span>:<span class="regexp">/lib/m</span><span class="attr">odules</span>:ro \</span><br><span class="line">  -v /etc/resolv.<span class="property">conf</span>:<span class="regexp">/etc/</span>resolv.<span class="property">conf</span> \</span><br><span class="line">  -v /etc/<span class="attr">v2raya</span>:<span class="regexp">/etc/</span>v2raya \</span><br><span class="line">  mzz2017/v2raya</span><br></pre></td></tr></table></figure><p>如果你使用 macOS 或其他不支持 host 模式的环境，在该情况下<strong>无法使用全局透明代理</strong>，或者你不希望使用全局透明代理，docker 命令会略有不同：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  -p <span class="number">2017</span>:<span class="number">2017</span> \</span><br><span class="line">  -p <span class="number">20170</span>-<span class="number">20172</span>:<span class="number">20170</span>-<span class="number">20172</span> \</span><br><span class="line">  --restart=always \</span><br><span class="line">  --name v2raya \</span><br><span class="line">  -e <span class="variable constant_">V2RAYA_V2RAY_BIN</span>=<span class="regexp">/usr/</span>local/bin/v2ray \</span><br><span class="line">  -e <span class="variable constant_">V2RAYA_LOG_FILE</span>=<span class="regexp">/tmp/</span>v2raya.<span class="property">log</span> \</span><br><span class="line">  -v /etc/<span class="attr">v2raya</span>:<span class="regexp">/etc/</span>v2raya \</span><br><span class="line">  mzz2017/v2raya</span><br></pre></td></tr></table></figure><p>查看状态：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">docker container stats v2raya</span><br></pre></td></tr></table></figure><h2 id="方式二：获取指定版本"><a href="#方式二：获取指定版本" class="headerlink" title="方式二：获取指定版本"></a>方式二：获取指定版本</h2><p>Docker 允许用户同时下载不同版本的 v2rayA。通过错开端口等操作，用户还可以运行多个不同版本的 v2rayA。</p><h3 id="获取镜像-1"><a href="#获取镜像-1" class="headerlink" title="获取镜像"></a>获取镜像</h3><p>获取最新的版本号：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Latest</span>_version=$(curl -L <span class="string">&quot;https://api.github.com/repos/v2rayA/v2rayA/releases/latest&quot;</span> | grep <span class="string">&#x27;tag_name&#x27;</span> | awk -F <span class="string">&#x27;&quot;&#x27;</span> <span class="string">&#x27;&#123;print $4&#125;&#x27;</span> | awk -F <span class="string">&#x27;v&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">echo $Latest_version</span><br></pre></td></tr></table></figure><p>如果你不需要最新的版本，你也可以访问 <a href="https://hub.docker.com/r/mzz2017/v2raya/tags">Docker 镜像仓库</a> 查找所需的版本。比如，你需要 1.5.8 版本，那么将 <code>$Latest_version</code> 替换为你所需的版本即可。</p><p>获取 Docker 镜像：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">docker pull mzz2017/<span class="attr">v2raya</span>:$Latest_version</span><br></pre></td></tr></table></figure><h3 id="运行-v2rayA-1"><a href="#运行-v2rayA-1" class="headerlink" title="运行 v2rayA"></a>运行 v2rayA</h3><p>使用 docker 运行 v2rayA:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --restart=always \</span><br><span class="line">  --privileged \</span><br><span class="line">  --network=host \</span><br><span class="line">  --name v2raya \</span><br><span class="line">  -e <span class="variable constant_">V2RAYA_LOG_FILE</span>=<span class="regexp">/tmp/</span>v2raya.<span class="property">log</span> \</span><br><span class="line">  -e <span class="variable constant_">V2RAYA_V2RAY_BIN</span>=<span class="regexp">/usr/</span>local/bin/v2ray \</span><br><span class="line">  -e <span class="variable constant_">V2RAYA_NFTABLES_SUPPORT</span>=off \</span><br><span class="line">  -e <span class="variable constant_">IPTABLES_MODE</span>=legacy \</span><br><span class="line">  -v /lib/<span class="attr">modules</span>:<span class="regexp">/lib/m</span><span class="attr">odules</span>:ro \</span><br><span class="line">  -v /etc/resolv.<span class="property">conf</span>:<span class="regexp">/etc/</span>resolv.<span class="property">conf</span> \</span><br><span class="line">  -v /etc/<span class="attr">v2raya</span>:<span class="regexp">/etc/</span>v2raya \</span><br><span class="line">  mzz2017/<span class="attr">v2raya</span>:$Latest_version</span><br></pre></td></tr></table></figure><p>如果你使用 MacOSX 或其他不支持 host 模式的环境，在该情况下<strong>无法使用全局透明代理</strong>，或者你不希望使用全局透明代理，docker 命令会略有不同：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  -p <span class="number">2017</span>:<span class="number">2017</span> \</span><br><span class="line">  -p <span class="number">20170</span>-<span class="number">20172</span>:<span class="number">20170</span>-<span class="number">20172</span> \</span><br><span class="line">  --restart=always \</span><br><span class="line">  --name v2raya \</span><br><span class="line">  -e <span class="variable constant_">V2RAYA_LOG_FILE</span>=<span class="regexp">/tmp/</span>v2raya.<span class="property">log</span> \</span><br><span class="line">  -v /etc/<span class="attr">v2raya</span>:<span class="regexp">/etc/</span>v2raya \</span><br><span class="line">  mzz2017/<span class="attr">v2raya</span>:$Latest_version</span><br></pre></td></tr></table></figure><p>查看状态：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">docker container stats v2raya</span><br></pre></td></tr></table></figure><h3 id="更新-v2rayA"><a href="#更新-v2rayA" class="headerlink" title="更新 v2rayA"></a>更新 v2rayA</h3><p>使用 <a href="#%E8%8E%B7%E5%8F%96%E9%95%9C%E5%83%8F">获取镜像</a> 中所提到的命令获取最新版本的镜像，然后停止当前容器：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">docker container stop v2raya</span><br><span class="line">docker container rm v2raya</span><br></pre></td></tr></table></figure><p>最后使用 <a href="#%E8%BF%90%E8%A1%8C-v2raya">运行 v2rayA</a> 里面所提到的命令运行新版本 v2rayA。更新 v2rayA 之后，你可以考虑删除旧版本镜像。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 安装docker compose 教程</title>
      <link href="/2025/02/21/%E6%95%99%E7%A8%8B/"/>
      <url>/2025/02/21/%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="CentOS-7-安装-docker-compose-教程"><a href="#CentOS-7-安装-docker-compose-教程" class="headerlink" title="CentOS 7 安装 docker compose 教程"></a>CentOS 7 安装 docker compose 教程</h3><p><img src="https://www.chumq.cn:6081/i/0/2025/02/27/io8jyn-0.png"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>正在折腾测试些<a href="https://cloud.tencent.com/product/tke?from_column=20065&from=20065">docker</a><a href="https://cloud.tencent.com/product/tke?from_column=20065&from=20065">容器</a>,用到docker compose功能,记录一下安装流程. CentOS 7 上Docker的安装方法参考:<br>本文为 <a href="https://cloud.tencent.com/developer/tools/blog-entry?target=https://www.ioiox.com/stille.html&objectId=1855291&objectType=1&isNewArticle=undefined">Stille</a> 原创文章.经实践,测试,整理发布.如需转载请联系作者获得授权,并注明转载地址.</p><hr><h3 id="三种安装方法"><a href="#三种安装方法" class="headerlink" title="三种安装方法"></a>三种安装方法</h3><ol><li>官方安装 - 速度慢,有可能被DNS污染导致失败.</li><li>手动安装 - 手动下载,离线安装.</li><li>PIP在线安装 - 使用Python的PIP包管理工具在线安装</li></ol><h4 id="官方安装"><a href="#官方安装" class="headerlink" title="官方安装"></a>官方安装</h4><p>官网选择版本 <a href="https://cloud.tencent.com/developer/tools/blog-entry?target=https://github.com/docker/compose/releases&objectId=1855291&objectType=1&isNewArticle=undefined">https://github.com/docker/compose/releases</a> <strong>以下命令手动修改版本号,例如<code>1.24.1</code></strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">curl -L <span class="attr">https</span>:<span class="comment">//github.com/docker/compose/releases/download/2.33.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose</span></span><br></pre></td></tr></table></figure><p>添加执行权限</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>检查docker compose版本</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">docker-compose version</span><br></pre></td></tr></table></figure><h4 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h4><p>官网选择版本 <a href="https://cloud.tencent.com/developer/tools/blog-entry?target=https://github.com/docker/compose/releases&objectId=1855291&objectType=1&isNewArticle=undefined">https://github.com/docker/compose/releases</a> 选择相应版本,下载docker-compose-Linux-x86_64到本地或者<a href="https://cloud.tencent.com/product/cvm/?from_column=20065&from=20065">服务器</a>中 更名为<code>docker-compose</code>,并移动到 &#x2F;usr&#x2F;local&#x2F;bin 目录下 添加执行权限</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>检查docker compose版本</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">docker-compose version</span><br></pre></td></tr></table></figure><h4 id="PIP在线安装"><a href="#PIP在线安装" class="headerlink" title="PIP在线安装"></a>PIP在线安装</h4><p>安装依赖</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">yum -y install epel-release</span><br></pre></td></tr></table></figure><p>安装PIP</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">yum -y install python-pip</span><br></pre></td></tr></table></figure><p>升级PIP</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pip install --upgrade pip</span><br></pre></td></tr></table></figure><p>检查PIP版本</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pip --version</span><br><span class="line">&gt;pip <span class="number">19.3</span><span class="number">.1</span> <span class="keyword">from</span> /usr/lib/python2<span class="number">.7</span>/site-packages/<span class="title function_">pip</span> (python <span class="number">2.7</span>)</span><br></pre></td></tr></table></figure><p>安装docker compose,自行更改版本号.</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pip install -U docker-compose==<span class="number">1.24</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p>检查docker compose版本</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">docker-compose version</span><br></pre></td></tr></table></figure><p>如果使用PIP安装时报以下错误,先升级安装requests库.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">`ERROR: Cannot uninstall <span class="string">&#x27;requests&#x27;</span>. It is a distutils installed project and thus we cannot accurately determine <span class="built_in">which</span> files belong to it <span class="built_in">which</span> would lead to only a partial uninstall.`</span><br></pre></td></tr></table></figure><p>升级安装requests库</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pip install -I requests==<span class="number">2.10</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><p>再次安装docker compose</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pip install -U docker-compose==<span class="number">1.24</span><span class="number">.1</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Acme.sh脚本申请证书</title>
      <link href="/2025/02/21/%E4%BD%BF%E7%94%A8Acme.sh%E8%84%9A%E6%9C%AC%E7%94%B3%E8%AF%B7%E8%AF%81%E4%B9%A6/"/>
      <url>/2025/02/21/%E4%BD%BF%E7%94%A8Acme.sh%E8%84%9A%E6%9C%AC%E7%94%B3%E8%AF%B7%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<p><a href="https://image.rwrl.net/acme/2024-05-10-20-48-38.png"><img src="https://image.rwrl.net/acme/2024-05-10-20-48-38.png"></a></p><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>由于腾讯云也在4月底宣布将ssl证书改为90天的有效期，所以使用它的证书就不如使用acme.sh脚本来申请的证书方便，这个脚本呢，自动申请，自动续期，确实方便不少。</p><p>这里我只讲使用api令牌的方式进行申请，快而且其他的相对方便一些。打开下面的链接即可查看如何获取api密钥的方法。</p><p><a href="https://github.com/acmesh-official/acme.sh/wiki/dnsapi">https://github.com/acmesh-official/acme.sh/wiki/dnsapi</a></p><h3 id="本次演示域名托管在cloudflare"><a href="#本次演示域名托管在cloudflare" class="headerlink" title="本次演示域名托管在cloudflare"></a>本次演示域名托管在cloudflare</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt update   ##更新系统</span><br><span class="line">apt install -y socat</span><br><span class="line">wget -O -  https://get.acme.sh | sh -s email=ytb0324@outlook.com    ##更换自己的邮箱，接收有用的信息</span><br><span class="line">alias acme.sh=~/.acme.sh/acme.sh</span><br><span class="line">acme.sh --set-default-ca --server letsencrypt     ###默认的zero ssl证书，更换证书提供商</span><br><span class="line">export CF_Token=&quot;Sm_iU9EbM909bNbK67vyimaO38hCOhoGGc8fGm1B&quot;</span><br><span class="line">export CF_Zone_ID=&quot;235f185aab91647bc1eb3fb4c0f76969&quot;</span><br><span class="line">acme.sh --issue --dns dns_cf -d &#x27;042176.xyz&#x27; -d &#x27;*.042176.xyz&#x27;     ###这里申请的是主域名以及泛域名</span><br><span class="line"></span><br><span class="line">###安装证书到指定的文件夹</span><br><span class="line">mkdir /root/xxx   #创建一个文件夹</span><br><span class="line">acme.sh --install-cert -d &#x27;042176.xyz&#x27; -d &#x27;*.042176.xyz&#x27; \</span><br><span class="line">--key-file       /root/xxx/042176.xyz.key  \</span><br><span class="line">--fullchain-file /root/xxx/042176.xyz.crt \</span><br><span class="line">--reloadcmd     &quot;service nginx force-reload&quot;</span><br><span class="line"></span><br><span class="line">chmod -R 755 /root/xxx      ###赋予权限</span><br><span class="line"></span><br><span class="line">acme.sh --upgrade --auto-upgrade    ###自动升级脚本</span><br></pre></td></tr></table></figure><h4 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h4><p>这个脚本在国内的服务器有不定时抽搐，提示超时连接不上导致申请失败，所以在申请的时候需要在不同时段多尝试几次即可。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
